// <auto-generated />
using System;
using HistoriAcao.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HistoriAcao.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250731165205_InicialMigration")]
    partial class InicialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HistoriAcao.Api.Models.Alternative", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Letra")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Pontuacao")
                        .HasColumnType("integer");

                    b.Property<int>("QuestaoId")
                        .HasColumnType("integer");

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("QuestaoId");

                    b.ToTable("Alternatives");
                });

            modelBuilder.Entity("HistoriAcao.Api.Models.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Origem")
                        .HasColumnType("text");

                    b.Property<int>("QuestaoId")
                        .HasColumnType("integer");

                    b.Property<string>("Texto")
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Titulo")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("QuestaoId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("HistoriAcao.Api.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Enunciado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Fase")
                        .HasColumnType("integer");

                    b.Property<string>("NivelDificuldade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Olimpiada")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("SubtopicoId")
                        .HasColumnType("integer");

                    b.Property<int>("TopicoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SubtopicoId");

                    b.HasIndex("TopicoId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("HistoriAcao.Api.Models.Subtopic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TopicoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TopicoId");

                    b.ToTable("Subtopics");
                });

            modelBuilder.Entity("HistoriAcao.Api.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("HistoriAcao.Api.Models.Alternative", b =>
                {
                    b.HasOne("HistoriAcao.Api.Models.Question", "Questao")
                        .WithMany("Alternativas")
                        .HasForeignKey("QuestaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Questao");
                });

            modelBuilder.Entity("HistoriAcao.Api.Models.Document", b =>
                {
                    b.HasOne("HistoriAcao.Api.Models.Question", "Questao")
                        .WithMany("Documentos")
                        .HasForeignKey("QuestaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Questao");
                });

            modelBuilder.Entity("HistoriAcao.Api.Models.Question", b =>
                {
                    b.HasOne("HistoriAcao.Api.Models.Subtopic", "Subtopico")
                        .WithMany("Questoes")
                        .HasForeignKey("SubtopicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HistoriAcao.Api.Models.Topic", "Topico")
                        .WithMany("Questoes")
                        .HasForeignKey("TopicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subtopico");

                    b.Navigation("Topico");
                });

            modelBuilder.Entity("HistoriAcao.Api.Models.Subtopic", b =>
                {
                    b.HasOne("HistoriAcao.Api.Models.Topic", "Topico")
                        .WithMany("Subtopicos")
                        .HasForeignKey("TopicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topico");
                });

            modelBuilder.Entity("HistoriAcao.Api.Models.Question", b =>
                {
                    b.Navigation("Alternativas");

                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("HistoriAcao.Api.Models.Subtopic", b =>
                {
                    b.Navigation("Questoes");
                });

            modelBuilder.Entity("HistoriAcao.Api.Models.Topic", b =>
                {
                    b.Navigation("Questoes");

                    b.Navigation("Subtopicos");
                });
#pragma warning restore 612, 618
        }
    }
}
